Object subclass: #CuOOra	instanceVariableNames: 'usuarios topicos'	classVariableNames: ''	package: 'CuOOra'!!CuOOra methodsFor: 'public' stamp: 'donn1 3/26/2020 17:40'!devolverPregSegunTopico:unTopico		^  usuarios flatCollect:[ :usuario | usuario devolverPreguntasTopico:unTopico]	! !!CuOOra methodsFor: 'public' stamp: 'donn1 3/26/2020 17:01'!buscarTopico:unNombre		^topicos select:[:each | each nombre==unNombre]! !!CuOOra methodsFor: 'public' stamp: 'donn1 3/26/2020 17:02'!crearTopico: unNombre desc: unaDesc	| existe |	existe := self		buscarTopico:unNombre.		existe ifNil: [ ^ Topico nombre: unNombre desc: unaDesc ]		ifNotNil: [ ^ existe ]! !!CuOOra methodsFor: 'public' stamp: 'donn1 3/26/2020 17:48'!gestionarRta:unaRta p:unaPreg u:unUsuario	unUsuario agregarRta:unaRta.	unaPreg agregarRta:unaRta.! !!CuOOra methodsFor: 'public' stamp: 'donn1 3/26/2020 16:54'!agregarUsuario:unUsuario	usuarios add:unUsuario! !!CuOOra methodsFor: 'initialization' stamp: 'donn1 3/26/2020 17:05'!initialize	topicos:= Set new.	usuarios:= Set new.! !Object subclass: #Elemento	instanceVariableNames: 'fechahora votos'	classVariableNames: ''	package: 'CuOOra'!!Elemento methodsFor: 'accesing' stamp: 'donn1 3/26/2020 17:46'!agregarVoto:unVoto 		|votoViejo|	votoViejo:=(self buscarVoto:unVoto )		ifNil:[ votos add:unVoto]		ifNotNil:[votos remove:votoViejo; add:unVoto]! !!Elemento methodsFor: 'accesing' stamp: 'donn1 3/26/2020 16:32'!borrarme	^self subclassResponsibility! !!Elemento methodsFor: 'accesing' stamp: 'donn1 3/26/2020 17:46'!buscarVoto:unVoto 	|unUsuario|	unUsuario:= unVoto meCreo.		^ votos do: [:each | unUsuario == each meCreo]! !!Elemento methodsFor: 'accesing' stamp: 'donn1 3/26/2020 17:21'!calcularPuntaje"recorre votos y divide en dos sets sus votos para hacer el conteo, devuelve la diferencia"	| positivos negativos |	positivos := Set new.	negativos := Set new.	votos do: [ :each | each like				ifTrue: [ positivos add: each ]				ifFalse: [ negativos add: each ] ].	^ (positivos size - negativos size).! !!Elemento methodsFor: 'initialization' stamp: 'ValentinColato 3/28/2020 18:58'!initialize	fechahora := DateAndTime new.	votos := Set new.! !Elemento subclass: #Pregunta	instanceVariableNames: 'titulo topicos rtas descr'	classVariableNames: ''	package: 'CuOOra'!!Pregunta methodsFor: 'initialize' stamp: 'donn1 3/26/2020 16:33'!initialize	rtas := OrderedCollection new.	topicos := Set new! !!Pregunta methodsFor: 'setter' stamp: 'donn1 3/26/2020 17:44'!agregarRta: unaRta	rtas add:unaRta! !!Pregunta methodsFor: 'setter' stamp: 'donn1 3/26/2020 16:29'!titulo: anObject1 fechahora: anObject2 descr: anObject3 topicos: anObject4	titulo := anObject1.	fechahora:=anObject2.	descr := anObject3.	topicos := anObject4! !!Pregunta methodsFor: 'accesing' stamp: 'donn1 3/26/2020 16:39'!borrarme	rtas do: [ :each | each borrarme]	 ! !!Pregunta methodsFor: 'accesing' stamp: 'donn1 3/26/2020 17:54'!esMiTopico:unTopico	topicos do:[ :each | each nombre == unTopico nombre		ifTrue:[^true ]].	^false! !!Pregunta methodsFor: 'accesing' stamp: 'donn1 3/26/2020 17:17'!agregarTopico:unTopico	topicos add:unTopico! !!Pregunta methodsFor: 'accesing' stamp: 'donn1 3/26/2020 17:26'!devolverTopicos	^topicos! !!Pregunta methodsFor: 'accesing' stamp: 'donn1 3/26/2020 17:20'!rtasOrdenadas	^ rtas asSortedCollection: [ :unaRta :otraRta | unaRta calcularPuntaje > otraRta calcularPuntaje  ]! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Pregunta class	instanceVariableNames: ''!!Pregunta class methodsFor: 'constructor' stamp: 'donn1 3/26/2020 16:30'!titulo: anObject1 fechahora: anObject2 descr: anObject3 topicos: anObject4	^ self new		titulo: anObject1		fechahora: anObject2		descr: anObject3		topicos: anObject4! !Elemento subclass: #Respuesta	instanceVariableNames: 'usuario'	classVariableNames: ''	package: 'CuOOra'!!Respuesta methodsFor: 'initialization' stamp: 'donn1 3/26/2020 16:45'!initialize	usuario:=nil.! !!Respuesta methodsFor: 'accessing' stamp: 'donn1 3/26/2020 16:41'!usuario:unUsuario	usuario:=unUsuario! !!Respuesta methodsFor: 'accessing' stamp: 'donn1 3/26/2020 16:23'!agregarVoto:unVoto 		|votoViejo|	votoViejo:=(self buscarVoto:unVoto )		ifNil:[ votos add:unVoto]		ifNotNil:[votos remove:votoViejo; add:unVoto]	! !!Respuesta methodsFor: 'accessing' stamp: 'donn1 3/26/2020 16:20'!buscarVoto:unVoto 	|usuario|	usuario:= unVoto meCreo.		^ votos do: [:each | usuario == each meCreo]	 ! !!Respuesta methodsFor: 'accessing' stamp: 'donn1 3/26/2020 16:43'!borrarme"invocado por pregunta"	usuario borrame: self! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Respuesta class	instanceVariableNames: ''!!Respuesta class methodsFor: 'constructor' stamp: 'donn1 3/26/2020 16:41'!usuario:unUsuario	^ self new usuario:unUsuario! !Object subclass: #Topico	instanceVariableNames: 'nombre desc'	classVariableNames: ''	package: 'CuOOra'!!Topico methodsFor: 'setter' stamp: 'donn1 3/26/2020 17:03'!nombre: unNombre desc: unaDesc 	nombre:=nombre.	desc:=unaDesc.! !!Topico methodsFor: 'accessing' stamp: 'donn1 3/26/2020 17:01'!nombre	^nombre! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Topico class	instanceVariableNames: ''!!Topico class methodsFor: 'constructor' stamp: 'donn1 3/26/2020 17:03'!nombre: unNombre desc: unaDesc	^self new nombre: unNombre desc: unaDesc! !Object subclass: #Usuario	instanceVariableNames: 'nombre contraseña fechahora siguiendo preguntas rtas topicos'	classVariableNames: ''	package: 'CuOOra'!!Usuario methodsFor: 'protected' stamp: 'ValentinColato 3/26/2020 20:23'!borrarPreg: _preg"borra pregunta a la coleccion preguntas"^preguntas remove: _preg.! !!Usuario methodsFor: 'protected' stamp: 'ValentinColato 3/26/2020 22:02'!obtenerPregRelevante"Se considera relevante una pregunta cuando ésta pertenece a un tópico de interés para elusuario en cuestión o bien cuando fue realizada por alguno de los usuarios quesigue en la red social."^(preguntas select:[ :each | each esMiTopico: topicos ]) addAll: (siguiendo flatCollect:[:each |each devolverPreg]).! !!Usuario methodsFor: 'protected' stamp: 'ValentinColato 3/28/2020 18:58'!agregarRta:unaRta	rtas add: unaRta .! !!Usuario methodsFor: 'protected' stamp: 'ValentinColato 3/26/2020 20:23'!agregarTopico: _topico"agrega topico a la coleccion topicos"topicos  add: _topico.! !!Usuario methodsFor: 'protected' stamp: 'ValentinColato 3/26/2020 20:22'!agregarPregunta: _pregunta"agrega pregunta a la coleccion preguntas"preguntas  add: _pregunta.! !!Usuario methodsFor: 'protected' stamp: 'ValentinColato 3/26/2020 20:20'!devolverPreg ^preguntas.! !!Usuario methodsFor: 'protected' stamp: 'ValentinColato 3/26/2020 20:19'!seguirA: _usersiguiendo  add: _user.! !!Usuario methodsFor: 'protected' stamp: 'ValentinColato 3/26/2020 20:46'!agregarVoto: _voto elemento: _elemento"agregar voto de pregunta o respuesta"_elemento agregarVoto: _voto.! !!Usuario methodsFor: 'protected' stamp: 'donn1 3/26/2020 16:43'!borrame: unaRespuesta"borra la respuesta de su coleccion, metodo invocado por respuesta"	rtas remove: unaRespuesta! !!Usuario methodsFor: 'protected' stamp: 'ValentinColato 3/26/2020 22:12'!devolverPreguntasTopico:unTopico^preguntas select:[:each|each esMiTopico: unTopico ].! !!Usuario methodsFor: 'protected' stamp: 'ValentinColato 3/26/2020 20:30'!calcularPuntaje"se calcula en función de su actividad en la red social. Por cada preguntarealizada, suma 20 puntos, y por cada respuesta a una pregunta que realizóotro usuario, suma 50 puntos. Además, se suma puntaje determinado por ladiferencia entre likes y dislikes de todas sus participaciones, que de tener masdislikes que likes, puede ser negativo."|puntaje_usuario|puntaje_usuario:=0.preguntas do:[:each | puntaje_usuario:= puntaje_usuario+ 20  + each calcularPuntaje ].rtas do:[:each | puntaje_usuario:= puntaje_usuario+ 50  + each calcularPuntaje ].^puntaje_usuario.! !!Usuario methodsFor: 'protected' stamp: 'ValentinColato 3/26/2020 20:17'!borrarRespuesta: unaRespuesta"borra la respuesta de su coleccion, metodo invocado por respuesta"	rtas remove: unaRespuesta! !!Usuario methodsFor: 'initialization' stamp: 'ValentinColato 3/26/2020 21:55'!initializefechahora:=DateAndTime .siguiendo:=Set new.rtas:=OrderedCollection new.topicos:=OrderedCollection new.! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Usuario class	instanceVariableNames: ''!!Usuario class methodsFor: 'constructor' stamp: 'ValentinColato 3/26/2020 20:16'!nombre: _nombre contraseña: _contraseña   ^(self new) nombre: _nombre contraseña: _contraseña .! !Object subclass: #Voto	instanceVariableNames: 'like fechahora usuario'	classVariableNames: ''	package: 'CuOOra'!!Voto methodsFor: 'public' stamp: 'donn1 3/26/2020 17:13'!like	^like! !!Voto methodsFor: 'public' stamp: 'donn1 3/26/2020 16:19'!meCreo	^usuario! !!Voto methodsFor: 'setter' stamp: 'ValentinColato 3/26/2020 21:46'!like: _like usuario:_usuariolike:=_like.usuario:=_usuario.! !!Voto methodsFor: 'initialize' stamp: 'ValentinColato 3/26/2020 21:48'!initialize fechahora :=DateAndTime .! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Voto class	instanceVariableNames: ''!!Voto class methodsFor: 'constructor' stamp: 'ValentinColato 3/26/2020 21:47'!like: _like usuario:_usuario^(self new)like: _like usuario:_usuario.! !