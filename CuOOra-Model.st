WAComponent subclass: #HomeComponent	instanceVariableNames: 'cuoora newPregunta newRespuesta usuario'	classVariableNames: ''	package: 'CuOOra-Model-CuOOra-UI'!!HomeComponent methodsFor: 'initialize' stamp: 'ValentinColato 4/5/2020 09:41'!renderContentOn: aCanvas	aCanvas strong:'CuOOra'.	aCanvas space.	aCanvas		unorderedList: [ cuoora obtenerPreguntas 							do: [ :each | 					aCanvas listItem: [ aCanvas anchor								with: each titulo ] ] ].	"aCanvas anchor		callback: [ self newPregunta ];		with: [ aCanvas button: 'Add' ]"! !!HomeComponent methodsFor: 'initialize' stamp: 'ValentinColato 4/4/2020 23:51'!edit: unUsuario	self call: (LoginComponent  usuario:unUsuario).! !!HomeComponent methodsFor: 'initialize' stamp: 'ValentinColato 4/5/2020 09:39'!initialize super initialize ."|p1 p2|p1:=Pregunta titulo: 'hace calor?' descr:'clima'  topicos:(Topico nombre: 'clima' desc:'sobre el clima xd' ).usuario agregarPregunta: p1.cuoora agregarUsuario: usuario. "! !!HomeComponent methodsFor: 'initialize' stamp: 'ValentinColato 4/4/2020 23:55'!usuario: unUsuario cuoora:unCuoorausuario:=unUsuario .cuoora:=unCuoora.! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!HomeComponent class	instanceVariableNames: ''!!HomeComponent class methodsFor: 'initialize' stamp: 'ValentinColato 4/4/2020 23:56'!usuario: unUsuario cuoora:unCuoora^ self new usuario: unUsuario cuoora:unCuoora! !WAComponent subclass: #LoginComponent	instanceVariableNames: 'cuoora usuario newUserName newContraseña'	classVariableNames: ''	package: 'CuOOra-Model-CuOOra-UI'!!LoginComponent methodsFor: 'rendering' stamp: 'ValentinColato 4/4/2020 22:43'!renderContentOn: aCanvas	aCanvas		form: [ 	aCanvas strong:'CuOOra'.				   aCanvas space.					aCanvas				paragraph: [ aCanvas label: 'Usuario: '.					aCanvas textInput on: #newUserName of: self ].			aCanvas				paragraph: [ aCanvas label: 'Contraseña '.					aCanvas textInput on: #newContraseña of: self ].			aCanvas button				callback: [ self acceder ];				with: 'Iniciar Sesion'.			aCanvas space.	]! !!LoginComponent methodsFor: 'callback' stamp: 'ValentinColato 4/5/2020 09:48'!acceder	usuario:= Usuario nombre: newUserName  contraseña: newContraseña .	(cuoora buscarUsuario: newUserName  contraseña: newContraseña )ifNotNil: [self call:(HomeComponent usuario: usuario cuoora: cuoora).  ].! !!LoginComponent methodsFor: 'initialize' stamp: 'ValentinColato 4/5/2020 09:39'!initialize |p1 p2|super initialize .p1:=Pregunta titulo: 'hace calor?' descr:'clima'  topicos:(Topico nombre: 'clima' desc:'sobre el clima xd' ).usuario:= Usuario nombre:'donna' contraseña:'astrologia'.usuario agregarPregunta: p1.cuoora := CuOOra new.cuoora agregarUsuario: usuario.! !!LoginComponent methodsFor: 'instance creation' stamp: 'ValentinColato 4/4/2020 23:09'!newUserName^newUserName ! !!LoginComponent methodsFor: 'instance creation' stamp: 'ValentinColato 4/4/2020 22:39'!newUserName:unUserNamenewUserName := unUserName .! !!LoginComponent methodsFor: 'instance creation' stamp: 'ValentinColato 4/4/2020 23:10'!usuario:unUsuariousuario :=unUsuario .! !!LoginComponent methodsFor: 'instance creation' stamp: 'ValentinColato 4/4/2020 22:40'!newContraseña:unaContraseñanewContraseña:=unaContraseña .! !!LoginComponent methodsFor: 'instance creation' stamp: 'ValentinColato 4/4/2020 23:09'!newContraseña^newContraseña ! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!LoginComponent class	instanceVariableNames: ''!!LoginComponent class methodsFor: 'accessing' stamp: 'ValentinColato 4/4/2020 23:28'!usuario: unUsuario	^ self new		usuario: unUsuario;		yourself! !Object subclass: #CuOOra	instanceVariableNames: 'usuarios topicos'	classVariableNames: ''	package: 'CuOOra-Model-CuOOra-model'!!CuOOra methodsFor: 'accessing' stamp: 'donn1 4/1/2020 16:15'!usuarios	 ^usuarios! !!CuOOra methodsFor: 'initialization'!initialize	topicos:= Set new.	usuarios:= Set new.! !!CuOOra methodsFor: 'public' stamp: 'ValentinColato 4/2/2020 10:11'!obtenerPreguntasRelevantesde:usuario"Se considera relevante una pregunta cuando ésta pertenece a un tópico de interés para elusuario en cuestión o bien cuando fue realizada por alguno de los usuarios quesigue en la red social.addAll: (usuario siguiendo flatCollect:[:each| each devolverPreg ])."|preguntas topicos_relevantes preguntas_relevantes|topicos_relevantes:=usuario topicos.preguntas:=self obtenerPreguntas.preguntas_relevantes:= (preguntas select:[:pregunta| ( topicos_relevantes anySatisfy: [:topico| pregunta esMiTopico: topico]) ]).usuario devolverPregSiguiendo do:[:each| preguntas_relevantes add:each].^preguntas_relevantes.! !!CuOOra methodsFor: 'public' stamp: 'ValentinColato 4/1/2020 21:23'!obtenerPreguntas^usuarios flatCollect: [:each| each devolverPreg  ].! !!CuOOra methodsFor: 'public'!agregarUsuario:unUsuario	usuarios add:unUsuario! !!CuOOra methodsFor: 'public' stamp: 'ValentinColato 4/5/2020 09:46'!buscarUsuario:unNombre contraseña:unaContraseña	^ usuarios		detect: [ :each | each nombre = unNombre and:(each esMiContraseña: unaContraseña)]		ifNone: [ nil ]! !!CuOOra methodsFor: 'public' stamp: 'donn1 4/1/2020 17:35'!buscarTopico: unNombre	^ topicos		detect: [ :each | each nombre = unNombre ]		ifNone: [ nil ]! !!CuOOra methodsFor: 'public' stamp: 'donn1 4/1/2020 17:18'!crearTopico: unNombre desc: unaDesc	| existe |	existe := self buscarTopico: unNombre.		existe		ifNil: [ | topico |			topico := Topico nombre: unNombre desc: unaDesc.			self agregarTopico: topico.			^ topico ]				ifNotNil: [ ^ existe ]! !!CuOOra methodsFor: 'public'!gestionarRta:unaRta p:unaPreg u:unUsuario	unUsuario agregarRta:unaRta.	unaPreg agregarRta:unaRta.! !!CuOOra methodsFor: 'public'!devolverPregSegunTopico:unTopico		^  usuarios flatCollect:[ :usuario | usuario devolverPreguntasTopico:unTopico]	! !!CuOOra methodsFor: 'accesing' stamp: 'donn1 4/1/2020 16:30'!agregarTopico: topico		topicos add:topico ! !Object subclass: #Elemento	instanceVariableNames: 'fechahora votos'	classVariableNames: ''	package: 'CuOOra-Model-CuOOra-model'!!Elemento methodsFor: 'initialization' stamp: 'donn1 4/1/2020 17:51'!initialize	fechahora := DateAndTime now.	votos := Set new.! !!Elemento methodsFor: 'accesing'!agregarVoto:unVoto 		|votoViejo|	votoViejo:=(self buscarVoto:unVoto )		ifNil:[ votos add:unVoto]		ifNotNil:[votos remove:votoViejo; add:unVoto]! !!Elemento methodsFor: 'accesing'!borrarme	^self subclassResponsibility! !!Elemento methodsFor: 'accesing' stamp: 'ValentinColato 4/1/2020 19:30'!votos^votos.! !!Elemento methodsFor: 'accesing'!calcularPuntaje"recorre votos y divide en dos sets sus votos para hacer el conteo, devuelve la diferencia"	| positivos negativos |	positivos := Set new.	negativos := Set new.	votos do: [ :each | each like				ifTrue: [ positivos add: each ]				ifFalse: [ negativos add: each ] ].	^ (positivos size - negativos size).! !!Elemento methodsFor: 'accesing' stamp: 'donn1 4/3/2020 10:44'!buscarVoto:unVoto 		^ votos		detect: [ :each | each = unVoto]		ifNone: [ nil ]! !Elemento subclass: #Pregunta	instanceVariableNames: 'titulo topicos rtas descr'	classVariableNames: ''	package: 'CuOOra-Model-CuOOra-model'!!Pregunta methodsFor: 'initialize' stamp: 'donn1 4/1/2020 18:00'!initialize	super initialize.	rtas := OrderedCollection new.	topicos := Set new! !!Pregunta methodsFor: 'accesing'!devolverTopicos	^topicos! !!Pregunta methodsFor: 'accesing' stamp: 'ValentinColato 4/1/2020 21:05'!esMiTopico: topico	^topicos anySatisfy: [ :each | each nombre= topico nombre].	! !!Pregunta methodsFor: 'accesing' stamp: 'donn1 4/3/2020 11:09'!borrarme	rtas do: [ :each | each borrarme. rtas remove:each]	 ! !!Pregunta methodsFor: 'accesing' stamp: 'donn1 4/1/2020 17:59'!agregarTopico: unTopico	topicos		detect: [ :each | each nombre =unTopico nombre ]		ifNone: [ topicos add: unTopico ]! !!Pregunta methodsFor: 'accesing' stamp: 'ValentinColato 4/4/2020 23:49'!titulo^titulo! !!Pregunta methodsFor: 'accesing' stamp: 'donn1 4/1/2020 16:53'!respuestas	^rtas! !!Pregunta methodsFor: 'accesing'!rtasOrdenadas	^ rtas asSortedCollection: [ :unaRta :otraRta | unaRta calcularPuntaje > otraRta calcularPuntaje  ]! !!Pregunta methodsFor: 'setter'!agregarRta: unaRta	rtas add:unaRta! !!Pregunta methodsFor: 'setter' stamp: 'donn1 4/1/2020 17:57'!titulo: anObject1 descr: anObject3 topicos: anObject4	titulo := anObject1.	descr := anObject3.	topicos add: anObject4! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Pregunta class	instanceVariableNames: ''!!Pregunta class methodsFor: 'as yet unclassified' stamp: 'donn1 3/26/2020 16:30'!titulo: anObject1 fechahora: anObject2 descr: anObject3 topicos: anObject4	^ self new		titulo: anObject1		fechahora: anObject2		descr: anObject3		topicos: anObject4! !!Pregunta class methodsFor: 'constructor' stamp: 'donn1 4/1/2020 16:43'!titulo: anObject1 descr: anObject2 topicos: anObject3	^ self new		titulo: anObject1		descr: anObject2		topicos: anObject3 ! !Elemento subclass: #Respuesta	instanceVariableNames: 'usuario texto'	classVariableNames: ''	package: 'CuOOra-Model-CuOOra-model'!!Respuesta methodsFor: 'initialization' stamp: 'donn1 4/1/2020 17:51'!initialize	super initialize.	usuario := nil! !!Respuesta methodsFor: 'accessing'!borrarme"invocado por pregunta"	usuario borrame: self! !!Respuesta methodsFor: 'accessing' stamp: 'donn1 4/1/2020 16:52'!usuario: unUsuario texto:untexto	usuario := unUsuario.	texto:=untexto ! !!Respuesta methodsFor: 'accessing'!usuario:unUsuario	usuario:=unUsuario! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Respuesta class	instanceVariableNames: ''!!Respuesta class methodsFor: 'constructor' stamp: 'donn1 4/1/2020 16:52'!usuario: unUsuario texto:untexto	^ self new usuario: unUsuario texto:untexto! !!Respuesta class methodsFor: 'constructor'!usuario:unUsuario	^ self new usuario:unUsuario! !Object subclass: #Topico	instanceVariableNames: 'nombre desc'	classVariableNames: ''	package: 'CuOOra-Model-CuOOra-model'!!Topico methodsFor: 'accessing'!nombre	^nombre! !!Topico methodsFor: 'setter' stamp: 'donn1 4/1/2020 17:29'!nombre: unNombre desc: unaDesc	nombre := unNombre.	desc := unaDesc! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Topico class	instanceVariableNames: ''!!Topico class methodsFor: 'constructor' stamp: 'donn1 4/1/2020 17:28'!nombre:unNombre desc: unaDesc	^ self new nombre:unNombre desc: unaDesc! !Object subclass: #Usuario	instanceVariableNames: 'nombre contraseña fechahora siguiendo preguntas rtas topicos'	classVariableNames: ''	package: 'CuOOra-Model-CuOOra-model'!!Usuario methodsFor: 'acccessing' stamp: 'donn1 4/1/2020 18:02'!respuestas	^rtas! !!Usuario methodsFor: 'acccessing' stamp: 'ValentinColato 4/4/2020 23:33'!nombre^nombre! !!Usuario methodsFor: 'acccessing' stamp: 'ValentinColato 4/5/2020 09:44'!esMiContraseña:unaContraseña^contraseña =unaContraseña . ! !!Usuario methodsFor: 'setter' stamp: 'donn1 4/1/2020 16:59'!nombre:unNombre contraseña: _contrasena	nombre :=unNombre.	contraseña := _contrasena! !!Usuario methodsFor: 'protected'!agregarTopico: _topico"agrega topico a la coleccion topicos"topicos  add: _topico.! !!Usuario methodsFor: 'protected'!borrame: unaRespuesta"borra la respuesta de su coleccion, metodo invocado por respuesta"	rtas remove: unaRespuesta! !!Usuario methodsFor: 'protected' stamp: 'ValentinColato 4/1/2020 19:51'!borrarPreg: _preg"borra pregunta a la coleccion preguntas"preguntas remove: _preg.! !!Usuario methodsFor: 'protected'!calcularPuntaje"se calcula en función de su actividad en la red social. Por cada preguntarealizada, suma 20 puntos, y por cada respuesta a una pregunta que realizóotro usuario, suma 50 puntos. Además, se suma puntaje determinado por ladiferencia entre likes y dislikes de todas sus participaciones, que de tener masdislikes que likes, puede ser negativo."|puntaje_usuario|puntaje_usuario:=0.preguntas do:[:each | puntaje_usuario:= puntaje_usuario+ 20  + each calcularPuntaje ].rtas do:[:each | puntaje_usuario:= puntaje_usuario+ 50  + each calcularPuntaje ].^puntaje_usuario.! !!Usuario methodsFor: 'protected' stamp: 'donn1 4/1/2020 17:46'!devolverPreguntasTopico: unTopico	^ preguntas select: [ :each | each esMiTopico:unTopico ]! !!Usuario methodsFor: 'protected' stamp: 'ValentinColato 4/2/2020 09:54'!devolverPregSiguiendo^siguiendo flatCollect:[:each| each devolverPreg ].! !!Usuario methodsFor: 'protected' stamp: 'ValentinColato 4/1/2020 19:24'!topicos^topicos! !!Usuario methodsFor: 'protected'!agregarPregunta: _pregunta"agrega pregunta a la coleccion preguntas"preguntas  add: _pregunta.! !!Usuario methodsFor: 'protected'!devolverPreg ^preguntas.! !!Usuario methodsFor: 'protected'!agregarVoto: _voto elemento: _elemento"agregar voto de pregunta o respuesta"_elemento agregarVoto: _voto.! !!Usuario methodsFor: 'protected' stamp: 'donn1 4/1/2020 18:10'!agregarRta: unaRta	rtas add:unaRta! !!Usuario methodsFor: 'protected' stamp: 'ValentinColato 4/1/2020 19:26'!siguiendo^siguiendo.! !!Usuario methodsFor: 'protected'!seguirA: _usersiguiendo  add: _user.! !!Usuario methodsFor: 'initialization' stamp: 'donn1 4/1/2020 17:42'!initialize	fechahora := DateAndTime.	siguiendo := Set new.	rtas := OrderedCollection new.	topicos := OrderedCollection new.	preguntas := OrderedCollection new.! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Usuario class	instanceVariableNames: ''!!Usuario class methodsFor: 'constructor' stamp: 'donn1 4/1/2020 16:57'!nombre: _nombre contraseña: _contraseña	^ (self new )nombre: _nombre contraseña: _contraseña! !Object subclass: #Voto	instanceVariableNames: 'like fechahora usuario'	classVariableNames: ''	package: 'CuOOra-Model-CuOOra-model'!!Voto methodsFor: 'initialize'!initialize fechahora :=DateAndTime .! !!Voto methodsFor: 'setter'!like: _like usuario:_usuariolike:=_like.usuario:=_usuario.! !!Voto methodsFor: 'public'!meCreo	^usuario! !!Voto methodsFor: 'public'!like	^like! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Voto class	instanceVariableNames: ''!!Voto class methodsFor: 'constructor'!like: _like usuario:_usuario^(self new)like: _like usuario:_usuario.! !