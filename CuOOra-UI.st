WAComponent subclass: #ConcederAcceso	instanceVariableNames: 'username contraseña'	classVariableNames: ''	package: 'CuOOra-UI'!!ConcederAcceso methodsFor: 'accessing - private' stamp: 'ValentinColato 4/9/2020 16:41'!proceedWith: aUser	self session user: aUser.	self call: (HomeComponent usuario:aUser cuoora:(self model ))! !!ConcederAcceso methodsFor: 'accessing' stamp: 'donn1 4/6/2020 21:05'!model 	^ CuOOra soleInstance ! !!ConcederAcceso methodsFor: 'accessing' stamp: 'donn1 4/6/2020 21:09'!contraseña:anObject	contraseña :=anObject! !!ConcederAcceso methodsFor: 'accessing' stamp: 'donn1 4/6/2020 21:08'!contraseña	^contraseña! !!ConcederAcceso methodsFor: 'accessing' stamp: 'donn1 4/6/2020 21:09'!username: anObject 	username:=anObject! !!ConcederAcceso methodsFor: 'accessing' stamp: 'donn1 4/6/2020 21:08'!username	^username! !!ConcederAcceso methodsFor: 'rendering' stamp: 'donn1 4/6/2020 21:12'!renderButtonsOn: aCanvas	self subclassResponsibility! !!ConcederAcceso methodsFor: 'rendering' stamp: 'donniyvalen 4/6/2020 22:16'!renderInputElementsOn: aCanvas	aCanvas label: 'Username'.	aCanvas paragraph: [ aCanvas textInput on: #username of: self ].		aCanvas label: 'Contraseña'.	aCanvas paragraph: [ aCanvas passwordInput on: #contraseña of: self ]! !!ConcederAcceso methodsFor: 'rendering' stamp: 'donniyvalen 4/6/2020 22:15'!renderContentOn:aCanvas	aCanvas heading:[aCanvas tableRow:[							aCanvas tableData: 'CuOOra' . aCanvas tableData align: 'left'.							aCanvas space.							]].	aCanvas form: [ 		self renderInputElementsOn: aCanvas.		self renderButtonsOn: aCanvas ] ! !WAComponent subclass: #HomeComponent	instanceVariableNames: 'cuoora newPregunta newRespuesta usuario newTextoRta pregunta'	classVariableNames: ''	package: 'CuOOra-UI'!!HomeComponent methodsFor: 'as yet unclassified' stamp: 'donniyvalen 4/6/2020 22:44'!formHome: aCanvas	| cincoPreguntas unaRespuestas |	aCanvas		form: [ cincoPreguntas := cuoora obtenerPregFechaHora: usuario.			cincoPreguntas				ifNotNil: [ (cincoPreguntas takeFirst: 5)						do: [ :each | 							aCanvas								listItem: [ aCanvas anchor										with: [ self dibujarPregunta: aCanvas pregunta: each ] ] ] ] ].	aCanvas anchor		callback: [ self crearPregunta ];		with: 'Crear Pregunta'.	aCanvas space! !!HomeComponent methodsFor: 'as yet unclassified' stamp: 'donniyvalen 4/6/2020 22:42'!crearPregunta	self call: (PreguntaComponent usuario:usuario)! !!HomeComponent methodsFor: 'as yet unclassified' stamp: 'donniyvalen 4/6/2020 22:44'!encabezado: aCanvas	aCanvas		heading: [ aCanvas				tableRow: [ aCanvas tableData: 'CuOOra'.					aCanvas tableData align: 'left'.					aCanvas space.					aCanvas						tableData: [ aCanvas anchor								callback: [ self volver ];								with: 'Logout' ].					aCanvas space.					aCanvas strong: usuario nombre.					aCanvas tableData align: 'right' ] ]! !!HomeComponent methodsFor: 'as yet unclassified' stamp: 'ValentinColato 4/9/2020 18:23'!dibujarPregunta: aCanvas pregunta: eachP	aCanvas text: eachP titulo.	aCanvas submitButton		callback: [ self responderPregunta: eachP ];		with: 'Responder'.	aCanvas text: eachP descripcion.	aCanvas space.	aCanvas text:'Respuestas: '.	aCanvas text: (eachP cantRtas asString) .	aCanvas space.	aCanvas text: eachP likes.	aCanvas submitButton		callback: [ self like: eachP ];		with: 'Like'.	aCanvas space.	aCanvas text: eachP dislikes.	aCanvas submitButton		callback: [ self dislike: eachP ];		with: 'Dislike'.	aCanvas space.	"	aCanvas		text: 'Pregunta creada por ' + ((cuoora )creadaPor: eachP) ."	aCanvas horizontalRule! !!HomeComponent methodsFor: 'callbacks' stamp: 'ValentinColato 4/5/2020 18:54'!like:unaPregunta			unaPregunta agregarVoto: (Voto like: true usuario: usuario ).		! !!HomeComponent methodsFor: 'callbacks' stamp: 'ValentinColato 4/9/2020 18:14'!volverself call:LoginComponent new.! !!HomeComponent methodsFor: 'callbacks' stamp: 'ValentinColato 4/5/2020 14:47'!responderPregunta: unaPregunta	self call:(ResponderComponent usuario: usuario pregunta:unaPregunta  cuoora:cuoora )! !!HomeComponent methodsFor: 'callbacks' stamp: 'ValentinColato 4/5/2020 18:54'!dislike:unaPregunta			unaPregunta agregarVoto: (Voto like: false usuario: usuario ).		! !!HomeComponent methodsFor: 'rendering' stamp: 'donniyvalen 4/6/2020 22:21'!renderContentOn: aCanvas		self encabezado: aCanvas.	aCanvas space.	self formHome: aCanvas! !!HomeComponent methodsFor: 'initialize' stamp: 'ValentinColato 4/4/2020 23:51'!edit: unUsuario	self call: (LoginComponent  usuario:unUsuario).! !!HomeComponent methodsFor: 'initialize' stamp: 'ValentinColato 4/5/2020 14:37'!initialize	super initialize .	! !!HomeComponent methodsFor: 'setter' stamp: 'ValentinColato 4/4/2020 23:55'!usuario: unUsuario cuoora:unCuoorausuario:=unUsuario .cuoora:=unCuoora.! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!HomeComponent class	instanceVariableNames: ''!!HomeComponent class methodsFor: 'initialize' stamp: 'ValentinColato 4/4/2020 23:56'!usuario: unUsuario cuoora:unCuoora^ self new usuario: unUsuario cuoora:unCuoora! !ConcederAcceso subclass: #LoginComponent	instanceVariableNames: ''	classVariableNames: ''	package: 'CuOOra-UI'!!LoginComponent commentStamp: 'ValentinColato 4/9/2020 16:50' prior: 0!"| application |application := WAAdmin register: LoginComponent2 asApplicationAt: 'cuoora'.application sessionClass: SessionWithUser. "!!LoginComponent methodsFor: 'callback' stamp: 'donn1 4/6/2020 21:27'!acceder		(self model buscarUsuario: username contraseña: contraseña)		ifNotNil: [ :it | self proceedWith: it ].		username := nil.	contraseña := nil! !!LoginComponent methodsFor: 'rendering' stamp: 'donn1 4/6/2020 21:18'!renderButtonsOn: aCanvas		self renderSignInButtonOn: aCanvas.	aCanvas horizontalRule.	aCanvas paragraph: 'No tiene una cuenta?'.	self renderSignUpButtonOn: aCanvas! !!LoginComponent methodsFor: 'rendering' stamp: 'donn1 4/6/2020 21:19'!renderSignUpButtonOn: aCanvas	aCanvas submitButton		callback: [ self registrarNuevoUsuario ];		with: 'Registrate!! es gratis!!'! !!LoginComponent methodsFor: 'rendering' stamp: 'donn1 4/6/2020 21:18'!renderSignInButtonOn: aCanvas	aCanvas submitButton		callback: [ self acceder ];		with: 'Iniciar Sesión'! !!LoginComponent methodsFor: 'as yet unclassified' stamp: 'donn1 4/6/2020 21:19'!registrarNuevoUsuario	self call: RegisterComponent new! !WAComponent subclass: #PreguntaComponent	instanceVariableNames: 'usuario titulo descr'	classVariableNames: ''	package: 'CuOOra-UI'!!PreguntaComponent methodsFor: 'as yet unclassified' stamp: 'donniyvalen 4/6/2020 22:34'!encabezado: aCanvas	aCanvas		heading: [ aCanvas				tableRow: [ aCanvas tableData: 'CuOOra'.					aCanvas tableData align: 'left'.					aCanvas space.					aCanvas						tableData: [ aCanvas submitButton								callback: [ self volver ];								with: 'Logout' ].					aCanvas space.					aCanvas strong: usuario nombre.					aCanvas tableData align: 'right' ] ]	! !!PreguntaComponent methodsFor: 'as yet unclassified' stamp: 'donniyvalen 4/6/2020 22:46'!preguntaForm: aCanvas	aCanvas label: 'Título'.	aCanvas paragraph: [ aCanvas textInput on: #titulo of: self ].	aCanvas label: 'Descripcion'.	aCanvas paragraph: [ aCanvas textInput on: #descr of: self ]! !!PreguntaComponent methodsFor: 'as yet unclassified' stamp: 'donniyvalen 4/6/2020 22:39'!cancelar		self answer! !!PreguntaComponent methodsFor: 'accessing' stamp: 'donniyvalen 4/6/2020 22:46'!descr	^descr! !!PreguntaComponent methodsFor: 'accessing' stamp: 'donniyvalen 4/6/2020 22:46'!titulo	^titulo ! !!PreguntaComponent methodsFor: 'accessing' stamp: 'donniyvalen 4/6/2020 22:45'!titulo:anObject 	titulo:=anObject! !!PreguntaComponent methodsFor: 'accessing' stamp: 'donniyvalen 4/6/2020 22:46'!descr: anObject	descr := anObject! !!PreguntaComponent methodsFor: 'accessing' stamp: 'ValentinColato 4/9/2020 18:18'!registrarPregunta		usuario agregarPregunta: (Pregunta titulo: titulo descr: descr topicos: (Topico nombre: 'a' desc:'b') ).	self answer.! !!PreguntaComponent methodsFor: 'accessing' stamp: 'donniyvalen 4/6/2020 22:34'!usuario:anObject	usuario:=anObject! !!PreguntaComponent methodsFor: 'rendering' stamp: 'donniyvalen 4/6/2020 22:47'!renderContentOn: aCanvas	self encabezado: aCanvas.	aCanvas strong: 'Nueva Pregunta'.	self preguntaForm: aCanvas.	aCanvas form:[	aCanvas submitButton		callback: [ self registrarPregunta ];		with: 'Aceptar'.	aCanvas submitButton		callback: [ self cancelar ];		with: 'Cancelar']! !!PreguntaComponent methodsFor: 'intialization' stamp: 'ValentinColato 4/9/2020 18:17'!initialize titulo:=nil.descr:=nil.! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!PreguntaComponent class	instanceVariableNames: ''!!PreguntaComponent class methodsFor: 'accessing' stamp: 'donniyvalen 4/6/2020 22:34'!usuario:anObject	^self new usuario:anObject ! !ConcederAcceso subclass: #RegisterComponent	instanceVariableNames: ''	classVariableNames: ''	package: 'CuOOra-UI'!!RegisterComponent methodsFor: 'rendering' stamp: 'donn1 4/6/2020 21:43'!renderButtonsOn: aCanvas	self renderSignUpButtonOn: aCanvas! !!RegisterComponent methodsFor: 'rendering' stamp: 'donn1 4/6/2020 21:37'!renderSignUpButtonOn: aCanvas	aCanvas submitButton 		callback: [ self registerAndLogin  ];		with:'Register'! !!RegisterComponent methodsFor: 'rendering' stamp: 'donniyvalen 4/6/2020 22:18'!renderInputElementsOn: aCanvas 		super renderInputElementsOn: aCanvas! !!RegisterComponent methodsFor: 'rendering' stamp: 'donniyvalen 4/6/2020 22:12'!registerAndLogin	| theUser |	theUser := Usuario nombre: username contraseña: contraseña.	self model agregarUsuario:theUser.	self proceedWith: theUser.! !WAComponent subclass: #ResponderComponent	instanceVariableNames: 'cuoora usuario pregunta newTextoRta'	classVariableNames: ''	package: 'CuOOra-UI'!!ResponderComponent methodsFor: 'setter' stamp: 'ValentinColato 4/5/2020 14:45'!usuario:unUsuario pregunta:unaPregunta cuoora:unCuoora	usuario:=unUsuario .	pregunta:=unaPregunta.	cuoora :=unCuoora! !!ResponderComponent methodsFor: 'setter' stamp: 'ValentinColato 4/5/2020 18:19'!newTextoRta:unNewTextoRtanewTextoRta:=unNewTextoRta .! !!ResponderComponent methodsFor: 'initialization' stamp: 'ValentinColato 4/5/2020 18:44'!initialize super initialize .! !!ResponderComponent methodsFor: 'rendering' stamp: 'ValentinColato 4/6/2020 21:12'!renderContentOn: aCanvas	aCanvas heading:[aCanvas tableRow:[							aCanvas tableData: 'CuOOra' . aCanvas tableData align: 'left'.							aCanvas space.							aCanvas tableData:[								aCanvas submitButton									callback: [ self volver ];									with: 'Logout'].								aCanvas space.								aCanvas strong:(usuario nombre). aCanvas tableData align:'right']].			aCanvas label: pregunta titulo.				aCanvas form: [ 	aCanvas				paragraph: [ aCanvas label: ''.					aCanvas textInput on: #newTextoRta of: self ].			aCanvas submitButton				callback: [ self responder ];				with: 'Responder'.				aCanvas submitButton				callback: [ self cancelar ];				with: 'Cancelar'.			   aCanvas space.	]	! !!ResponderComponent methodsFor: 'callback' stamp: 'ValentinColato 4/5/2020 14:42'!volver	self call:(HomeComponent usuario: usuario cuoora: cuoora)! !!ResponderComponent methodsFor: 'as yet unclassified' stamp: 'ValentinColato 4/6/2020 21:36'!cancelarself answer.! !!ResponderComponent methodsFor: 'acccessing' stamp: 'ValentinColato 4/5/2020 14:53'!newTextoRta^newTextoRta! !!ResponderComponent methodsFor: 'acccessing' stamp: 'ValentinColato 4/5/2020 14:54'!responder	|rta|	rta:= Respuesta usuario: usuario texto: newTextoRta.	cuoora gestionarRta: rta p: pregunta u: usuario.				self volver.! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!ResponderComponent class	instanceVariableNames: ''!!ResponderComponent class methodsFor: 'constructor' stamp: 'ValentinColato 4/5/2020 14:49'!usuario:unUsuario pregunta:unaPregunta cuoora:unCuoora	^self new usuario:unUsuario pregunta:unaPregunta cuoora:unCuoora! !WASession subclass: #SessionWithUser	instanceVariableNames: 'user'	classVariableNames: ''	package: 'CuOOra-UI'!!SessionWithUser methodsFor: 'accessing' stamp: 'ValentinColato 4/6/2020 19:22'!user: anObject	user := anObject! !!SessionWithUser methodsFor: 'accessing' stamp: 'ValentinColato 4/6/2020 19:22'!user	^ user! !